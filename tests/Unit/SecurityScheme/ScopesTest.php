<?php

namespace Tests\Unit\SecurityScheme;

use PHPUnit\Framework\Attributes\Test;
use Tests\TestCase;
use Zerotoprod\DataModelSwagger\SecurityScheme;

class ScopesTest extends TestCase
{

    #[Test] public function default_value(): void
    {
        $SecurityScheme = SecurityScheme::from([
            SecurityScheme::type => 'apiKey',
            SecurityScheme::name => 'name',
            SecurityScheme::in => 'query',
            SecurityScheme::tokenUrl => 'openIdConnectUrl',
        ]);

        self::assertEmpty(
            actual: $SecurityScheme->scopes,
            message: 'A hint to the client to identify how the bearer token is formatted. Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.'
        );
    }

    #[Test] public function string(): void
    {
        $SecurityScheme = SecurityScheme::from([
            SecurityScheme::type => 'apiKey',
            SecurityScheme::name => 'name',
            SecurityScheme::in => 'query',
            SecurityScheme::authorizationUrl => SecurityScheme::authorizationUrl,
            SecurityScheme::tokenUrl => 'openIdConnectUrl',
            SecurityScheme::flow => SecurityScheme::flow,
            SecurityScheme::scopes => [
                'write:pets' => 'modify pets in your account',
                'read:pets' => 'read your pets'
            ],
        ]);

        $this->assertEquals(
            expected: [
                'write:pets' => 'modify pets in your account',
                'read:pets' => 'read your pets'
            ],
            actual: $SecurityScheme->scopes,
            message: 'A hint to the client to identify how the bearer token is formatted. Bearer tokens are usually generated by an authorization server, so this information is primarily for documentation purposes.'
        );
    }
}